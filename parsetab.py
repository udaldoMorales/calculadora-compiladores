
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'CBRACKETS CPARENTHESIS DECIMAL DIVISON FINSTRUCTION FPROGRAM INTEGER MULTIPLICATION OBRACKETS OPARENTHESIS PLUS SUBSTRACTIONexpression : expression PLUS termexpression : expression SUBSTRACTION termexpression : termterm : term MULTIPLICATION factorterm : term DIVISON factorterm : factorfactor : INTEGERfactor : DECIMALfactor : OPARENTHESIS expression CPARENTHESISfactor : OBRACKETS expression CBRACKETS'
    
_lr_action_items = {'INTEGER':([0,6,7,8,9,10,11,],[4,4,4,4,4,4,4,]),'DECIMAL':([0,6,7,8,9,10,11,],[5,5,5,5,5,5,5,]),'OPARENTHESIS':([0,6,7,8,9,10,11,],[6,6,6,6,6,6,6,]),'OBRACKETS':([0,6,7,8,9,10,11,],[7,7,7,7,7,7,7,]),'$end':([1,2,3,4,5,14,15,16,17,18,19,],[0,-3,-6,-7,-8,-1,-2,-4,-5,-9,-10,]),'PLUS':([1,2,3,4,5,12,13,14,15,16,17,18,19,],[8,-3,-6,-7,-8,8,8,-1,-2,-4,-5,-9,-10,]),'SUBSTRACTION':([1,2,3,4,5,12,13,14,15,16,17,18,19,],[9,-3,-6,-7,-8,9,9,-1,-2,-4,-5,-9,-10,]),'CPARENTHESIS':([2,3,4,5,12,14,15,16,17,18,19,],[-3,-6,-7,-8,18,-1,-2,-4,-5,-9,-10,]),'CBRACKETS':([2,3,4,5,13,14,15,16,17,18,19,],[-3,-6,-7,-8,19,-1,-2,-4,-5,-9,-10,]),'MULTIPLICATION':([2,3,4,5,14,15,16,17,18,19,],[10,-6,-7,-8,10,10,-4,-5,-9,-10,]),'DIVISON':([2,3,4,5,14,15,16,17,18,19,],[11,-6,-7,-8,11,11,-4,-5,-9,-10,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression':([0,6,7,],[1,12,13,]),'term':([0,6,7,8,9,],[2,2,2,14,15,]),'factor':([0,6,7,8,9,10,11,],[3,3,3,3,3,16,17,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expression","S'",1,None,None,None),
  ('expression -> expression PLUS term','expression',3,'p_expression_plus','analizador_sintactico.py',10),
  ('expression -> expression SUBSTRACTION term','expression',3,'p_expression_SUBSTRACTION','analizador_sintactico.py',15),
  ('expression -> term','expression',1,'p_expression_term','analizador_sintactico.py',20),
  ('term -> term MULTIPLICATION factor','term',3,'p_term_MULTIPLICATION','analizador_sintactico.py',25),
  ('term -> term DIVISON factor','term',3,'p_term_division','analizador_sintactico.py',30),
  ('term -> factor','term',1,'p_term_factor','analizador_sintactico.py',35),
  ('factor -> INTEGER','factor',1,'p_factor_int','analizador_sintactico.py',41),
  ('factor -> DECIMAL','factor',1,'p_factor_dec','analizador_sintactico.py',46),
  ('factor -> OPARENTHESIS expression CPARENTHESIS','factor',3,'p_factor_expr','analizador_sintactico.py',51),
  ('factor -> OBRACKETS expression CBRACKETS','factor',3,'p_factor_brack_expr','analizador_sintactico.py',56),
]
